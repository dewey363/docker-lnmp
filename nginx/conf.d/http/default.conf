server {
  listen 80;
  # listen 443 ssl http2;
  server_name _;

  # ssl_certificate /etc/nginx/ssl/cert.pem;
  # ssl_certificate_key /etc/nginx/ssl/key.pem;
  # ssl_protocols TLSv1.2 TLSv1.3;
  # ssl_ciphers TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
  # ssl_prefer_server_ciphers on;
  # ssl_session_timeout 10m;
  # ssl_session_cache builtin:1000 shared:SSL:10m;
  # ssl_buffer_size 1400;
  # ssl_stapling on;
  # ssl_stapling_verify on;

  # openssl dhparam -out /etc/nginx/ssl/dhparam.pem 4096
  # ssl_dhparam /etc/nginx/ssl/dhparam.pem;

  charset utf-8;
  access_log /var/log/nginx/access.log combined;

  root /data/default;
  index index.html index.htm index.php;

  # if ($ssl_protocol = "") {
  #   return 301 https://$host$request_uri;
  # }

  # error_page 404 /404.html;
  # error_page 502 /502.html;

  # HSTS (15768000 seconds = 6 months)
  # add_header Strict-Transport-Security "max-age=15768001; preload";

  # location / {
  #   try_files $uri $uri/ /index.php$is_args$args;
  # }

  # location / {
  #   autoindex on;
  #   autoindex_exact_size off;
  #   autoindex_localtime on;
  # }

  location /nginx_status {
    stub_status on;
    access_log off;
    allow 127.0.0.1;
    deny all;
  }

  # location ~ [^/]\.php(/|$) {
  #   try_files  $uri =404;
  #   fastcgi_pass php:9000;
  #   fastcgi_index index.php;
  #   include /etc/nginx/fastcgi.conf;
  # }

  location ~ .*\.(gif|jpg|jpeg|png|webp|bmp|ico|mp4)$ {
    # valid_referers none blocked server_names ~\.google\. ~\.baidu\.;
    # if ($invalid_referer) {
    #     return 403;
    #     # rewrite ^/ http://domain/forbidden.png;
    # }

    expires 30d;
    access_log off;
  }

  location ~ .*\.(js|css)?$ {
    expires 30d;
    access_log off;
  }

  location ~.*.mp4$ {
    mp4;
  }

  # location /download {
  #   internal;
  #   # alias /data/download;
  #   secure_link $arg_token,$arg_expires;
  #   secure_link_md5 "$secure_link_expires$uri$remote_addr mySecret";
  #   if ($secure_link = "") { return 403; }
  #   if ($secure_link = "0") { return 410; }
  # }

  location ~ /\. {
    deny all;
  }
}
