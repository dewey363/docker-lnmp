name: Publish Docker LNMP Image

on:
  push:
    branches:
      - master
  release:
    types:
      - published
  watch:
    types:
      - started

jobs:
  build:
    name: Build LNMP
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest
    env:
      REGISTRY_URL: ${{ secrets.REGISTRY }}/${{ secrets.NAMESPACE }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@master
        id: checkout

      - name: Login Docker Registry
        run: |
          echo "${{ secrets.PASSWORD }}" | docker login "${{ secrets.REGISTRY }}" -u "${{ secrets.USERNAME }}" --password-stdin

      - name: Build Redis Image
        run: |
          IMAGE_NAME=docker-lnmp-redis
          cd redis
          docker build . --file Dockerfile --tag $IMAGE_NAME:latest
          docker tag $IMAGE_NAME:latest $REGISTRY_URL/$IMAGE_NAME:latest
          docker push "$REGISTRY_URL/$IMAGE_NAME:latest"

      - name: Build MariaDB Image
        run: |
          IMAGE_NAME=docker-lnmp-mariadb
          cd mariadb
          docker build . --file Dockerfile --tag $IMAGE_NAME:latest
          docker tag $IMAGE_NAME:latest $REGISTRY_URL/$IMAGE_NAME:latest
          docker push "$REGISTRY_URL/$IMAGE_NAME:latest"

      - name: Build PHP Image
        run: |
          IMAGE_NAME=docker-lnmp-php
          cd php
          docker build . --file Dockerfile --tag $IMAGE_NAME:latest
          docker tag $IMAGE_NAME:latest $REGISTRY_URL/$IMAGE_NAME:latest
          docker push "$REGISTRY_URL/$IMAGE_NAME:latest"

      - name: Build Nginx Image
        run: |
          IMAGE_NAME=docker-lnmp-nginx
          cd nginx
          docker build . --file Dockerfile --tag $IMAGE_NAME:latest
          docker tag $IMAGE_NAME:latest $REGISTRY_URL/$IMAGE_NAME:latest
          docker push "$REGISTRY_URL/$IMAGE_NAME:latest"
